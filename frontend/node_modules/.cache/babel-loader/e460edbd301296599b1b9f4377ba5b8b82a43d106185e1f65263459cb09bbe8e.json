{"ast":null,"code":"import { sessions } from '../sessions';\nimport { getUser } from '../api';\nexport const authorize = async (authLogin, authPassword) => {\n  const user = await getUser(authLogin);\n  if (!user) {\n    return {\n      error: 'Такой пользователь не найден',\n      res: null\n    };\n  }\n  if (authPassword !== user.password) {\n    return {\n      error: 'Неверный пароль',\n      res: null\n    };\n  }\n  return {\n    error: null,\n    res: {\n      id: user.id,\n      login: user.login,\n      roleId: user.role_id,\n      session: sessions.create(user)\n    }\n  };\n};","map":{"version":3,"names":["sessions","getUser","authorize","authLogin","authPassword","user","error","res","password","id","login","roleId","role_id","session","create"],"sources":["/Users/evgeniapodoprigora/Desktop/practice/src/bff/operations/authorize.js"],"sourcesContent":["import { sessions } from '../sessions';\nimport { getUser } from '../api';\n\nexport const authorize = async (authLogin, authPassword) => {\n\tconst user = await getUser(authLogin);\n\tif (!user) {\n\t\treturn {\n\t\t\terror: 'Такой пользователь не найден',\n\t\t\tres: null,\n\t\t};\n\t}\n\tif (authPassword !== user.password) {\n\t\treturn {\n\t\t\terror: 'Неверный пароль',\n\t\t\tres: null,\n\t\t};\n\t}\n\n\treturn {\n\t\terror: null,\n\t\tres: {\n\t\t\tid: user.id,\n\t\t\tlogin: user.login,\n\t\t\troleId: user.role_id,\n\t\t\tsession: sessions.create(user),\n\t\t},\n\t};\n};\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,aAAa;AACtC,SAASC,OAAO,QAAQ,QAAQ;AAEhC,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAOC,SAAS,EAAEC,YAAY,KAAK;EAC3D,MAAMC,IAAI,GAAG,MAAMJ,OAAO,CAACE,SAAS,CAAC;EACrC,IAAI,CAACE,IAAI,EAAE;IACV,OAAO;MACNC,KAAK,EAAE,8BAA8B;MACrCC,GAAG,EAAE;IACN,CAAC;EACF;EACA,IAAIH,YAAY,KAAKC,IAAI,CAACG,QAAQ,EAAE;IACnC,OAAO;MACNF,KAAK,EAAE,iBAAiB;MACxBC,GAAG,EAAE;IACN,CAAC;EACF;EAEA,OAAO;IACND,KAAK,EAAE,IAAI;IACXC,GAAG,EAAE;MACJE,EAAE,EAAEJ,IAAI,CAACI,EAAE;MACXC,KAAK,EAAEL,IAAI,CAACK,KAAK;MACjBC,MAAM,EAAEN,IAAI,CAACO,OAAO;MACpBC,OAAO,EAAEb,QAAQ,CAACc,MAAM,CAACT,IAAI;IAC9B;EACD,CAAC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}