{"ast":null,"code":"import{getPost}from'../api';import{getPostCommentsWithAuthor}from'../utils';export const fetchPost=async postId=>{let post;let error;try{post=await getPost(postId);}catch(postError){error=postError;}if(error){return{error,res:null};}const commentsWithAuthor=await getPostCommentsWithAuthor(postId);return{error:null,res:{...post,comments:commentsWithAuthor}};};","map":{"version":3,"names":["getPost","getPostCommentsWithAuthor","fetchPost","postId","post","error","postError","res","commentsWithAuthor","comments"],"sources":["/Users/evgeniapodoprigora/Desktop/practice/frontend/src/bff/operations/fetch-post.js"],"sourcesContent":["import { getPost } from '../api';\nimport { getPostCommentsWithAuthor } from '../utils';\nexport const fetchPost = async (postId) => {\n\tlet post;\n\tlet error;\n\ttry {\n\t\tpost = await getPost(postId);\n\t} catch (postError) {\n\t\terror = postError;\n\t}\n\n\tif (error) {\n\t\treturn {\n\t\t\terror,\n\t\t\tres: null,\n\t\t};\n\t}\n\n\tconst commentsWithAuthor = await getPostCommentsWithAuthor(postId);\n\treturn {\n\t\terror: null,\n\t\tres: { ...post, comments: commentsWithAuthor },\n\t};\n};\n"],"mappings":"AAAA,OAASA,OAAO,KAAQ,QAAQ,CAChC,OAASC,yBAAyB,KAAQ,UAAU,CACpD,MAAO,MAAM,CAAAC,SAAS,CAAG,KAAO,CAAAC,MAAM,EAAK,CAC1C,GAAI,CAAAC,IAAI,CACR,GAAI,CAAAC,KAAK,CACT,GAAI,CACHD,IAAI,CAAG,KAAM,CAAAJ,OAAO,CAACG,MAAM,CAAC,CAC7B,CAAE,MAAOG,SAAS,CAAE,CACnBD,KAAK,CAAGC,SAAS,CAClB,CAEA,GAAID,KAAK,CAAE,CACV,MAAO,CACNA,KAAK,CACLE,GAAG,CAAE,IACN,CAAC,CACF,CAEA,KAAM,CAAAC,kBAAkB,CAAG,KAAM,CAAAP,yBAAyB,CAACE,MAAM,CAAC,CAClE,MAAO,CACNE,KAAK,CAAE,IAAI,CACXE,GAAG,CAAE,CAAE,GAAGH,IAAI,CAAEK,QAAQ,CAAED,kBAAmB,CAC9C,CAAC,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}