{"ast":null,"code":"import { authorize, logout, register } from './operations';\nexport const server = {\n  async logout(session) {\n    sessions.remove(session);\n  },\n  async authorize(authLogin, authPassword) {\n    const user = await getUser(authLogin);\n    if (!user) {\n      return {\n        error: 'Такой пользователь не найден',\n        res: null\n      };\n    }\n    if (authPassword !== user.password) {\n      return {\n        error: 'Неверный пароль',\n        res: null\n      };\n    }\n    return {\n      error: null,\n      res: {\n        id: user.id,\n        login: user.login,\n        roleId: user.role_id,\n        session: sessions.create(user)\n      }\n    };\n  },\n  async register(regLogin, regPassword) {\n    const existedUser = await getUser(regLogin);\n    if (existedUser) {\n      return {\n        error: 'Такой логин уже занят',\n        res: null\n      };\n    }\n    const user = await addUser(regLogin, regPassword);\n    return {\n      error: null,\n      res: {\n        id: user.id,\n        login: user.login,\n        roleId: user.role_id,\n        session: sessions.create(user)\n      }\n    };\n  }\n};","map":{"version":3,"names":["authorize","logout","register","server","session","sessions","remove","authLogin","authPassword","user","getUser","error","res","password","id","login","roleId","role_id","create","regLogin","regPassword","existedUser","addUser"],"sources":["/Users/evgeniapodoprigora/Desktop/practice/src/bff/server.js"],"sourcesContent":["import { authorize, logout, register } from './operations';\n\nexport const server = {\n\tasync logout(session) {\n\t\tsessions.remove(session);\n\t},\n\tasync authorize(authLogin, authPassword) {\n\t\tconst user = await getUser(authLogin);\n\t\tif (!user) {\n\t\t\treturn {\n\t\t\t\terror: 'Такой пользователь не найден',\n\t\t\t\tres: null,\n\t\t\t};\n\t\t}\n\t\tif (authPassword !== user.password) {\n\t\t\treturn {\n\t\t\t\terror: 'Неверный пароль',\n\t\t\t\tres: null,\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\terror: null,\n\t\t\tres: {\n\t\t\t\tid: user.id,\n\t\t\t\tlogin: user.login,\n\t\t\t\troleId: user.role_id,\n\t\t\t\tsession: sessions.create(user),\n\t\t\t},\n\t\t};\n\t},\n\tasync register(regLogin, regPassword) {\n\t\tconst existedUser = await getUser(regLogin);\n\n\t\tif (existedUser) {\n\t\t\treturn {\n\t\t\t\terror: 'Такой логин уже занят',\n\t\t\t\tres: null,\n\t\t\t};\n\t\t}\n\n\t\tconst user = await addUser(regLogin, regPassword);\n\n\t\treturn {\n\t\t\terror: null,\n\t\t\tres: {\n\t\t\t\tid: user.id,\n\t\t\t\tlogin: user.login,\n\t\t\t\troleId: user.role_id,\n\t\t\t\tsession: sessions.create(user),\n\t\t\t},\n\t\t};\n\t},\n};\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,cAAc;AAE1D,OAAO,MAAMC,MAAM,GAAG;EACrB,MAAMF,MAAMA,CAACG,OAAO,EAAE;IACrBC,QAAQ,CAACC,MAAM,CAACF,OAAO,CAAC;EACzB,CAAC;EACD,MAAMJ,SAASA,CAACO,SAAS,EAAEC,YAAY,EAAE;IACxC,MAAMC,IAAI,GAAG,MAAMC,OAAO,CAACH,SAAS,CAAC;IACrC,IAAI,CAACE,IAAI,EAAE;MACV,OAAO;QACNE,KAAK,EAAE,8BAA8B;QACrCC,GAAG,EAAE;MACN,CAAC;IACF;IACA,IAAIJ,YAAY,KAAKC,IAAI,CAACI,QAAQ,EAAE;MACnC,OAAO;QACNF,KAAK,EAAE,iBAAiB;QACxBC,GAAG,EAAE;MACN,CAAC;IACF;IAEA,OAAO;MACND,KAAK,EAAE,IAAI;MACXC,GAAG,EAAE;QACJE,EAAE,EAAEL,IAAI,CAACK,EAAE;QACXC,KAAK,EAAEN,IAAI,CAACM,KAAK;QACjBC,MAAM,EAAEP,IAAI,CAACQ,OAAO;QACpBb,OAAO,EAAEC,QAAQ,CAACa,MAAM,CAACT,IAAI;MAC9B;IACD,CAAC;EACF,CAAC;EACD,MAAMP,QAAQA,CAACiB,QAAQ,EAAEC,WAAW,EAAE;IACrC,MAAMC,WAAW,GAAG,MAAMX,OAAO,CAACS,QAAQ,CAAC;IAE3C,IAAIE,WAAW,EAAE;MAChB,OAAO;QACNV,KAAK,EAAE,uBAAuB;QAC9BC,GAAG,EAAE;MACN,CAAC;IACF;IAEA,MAAMH,IAAI,GAAG,MAAMa,OAAO,CAACH,QAAQ,EAAEC,WAAW,CAAC;IAEjD,OAAO;MACNT,KAAK,EAAE,IAAI;MACXC,GAAG,EAAE;QACJE,EAAE,EAAEL,IAAI,CAACK,EAAE;QACXC,KAAK,EAAEN,IAAI,CAACM,KAAK;QACjBC,MAAM,EAAEP,IAAI,CAACQ,OAAO;QACpBb,OAAO,EAAEC,QAAQ,CAACa,MAAM,CAACT,IAAI;MAC9B;IACD,CAAC;EACF;AACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}