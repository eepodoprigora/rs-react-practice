{"ast":null,"code":"import { addComment, getComments, getPost, getUsers } from '../api';\nimport { ROLE } from '../constants';\nimport { sessions } from '../sessions';\nexport const addPostComment = async (hash, userId, postId, content) => {\n  const accessRoles = [ROLE.ADMIN, ROLE.MODERATOR, ROLE.READER];\n  const access = await sessions.access(hash, accessRoles);\n  if (!access) {\n    return {\n      error: 'Доступ запрещен',\n      res: null\n    };\n  }\n  await addComment(userId, postId, content);\n  const post = await getPost(postId);\n  const comments = await getComments(postId);\n  const users = await getUsers();\n  const commentsWithAuthor = comments.map(comment => {\n    const user = users.find(({\n      id\n    }) => id === comment.authorId);\n    return {\n      ...comment,\n      author: user === null || user === void 0 ? void 0 : user.login\n    };\n  });\n  return {\n    error: null,\n    res: {\n      ...post,\n      comments: commentsWithAuthor\n    }\n  };\n};","map":{"version":3,"names":["addComment","getComments","getPost","getUsers","ROLE","sessions","addPostComment","hash","userId","postId","content","accessRoles","ADMIN","MODERATOR","READER","access","error","res","post","comments","users","commentsWithAuthor","map","comment","user","find","id","authorId","author","login"],"sources":["/Users/evgeniapodoprigora/Desktop/practice/src/bff/operations/add-post-comment.js"],"sourcesContent":["import { addComment, getComments, getPost, getUsers } from '../api';\nimport { ROLE } from '../constants';\nimport { sessions } from '../sessions';\n\nexport const addPostComment = async (hash, userId, postId, content) => {\n\tconst accessRoles = [ROLE.ADMIN, ROLE.MODERATOR, ROLE.READER];\n\n\tconst access = await sessions.access(hash, accessRoles);\n\n\tif (!access) {\n\t\treturn {\n\t\t\terror: 'Доступ запрещен',\n\t\t\tres: null,\n\t\t};\n\t}\n\n\tawait addComment(userId, postId, content);\n\n\tconst post = await getPost(postId);\n\n\tconst comments = await getComments(postId);\n\n\tconst users = await getUsers();\n\n\tconst commentsWithAuthor = comments.map((comment) => {\n\t\tconst user = users.find(({ id }) => id === comment.authorId);\n\t\treturn {\n\t\t\t...comment,\n\t\t\tauthor: user?.login,\n\t\t};\n\t});\n\n\treturn {\n\t\terror: null,\n\t\tres: { ...post, comments: commentsWithAuthor },\n\t};\n};\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,WAAW,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,QAAQ;AACnE,SAASC,IAAI,QAAQ,cAAc;AACnC,SAASC,QAAQ,QAAQ,aAAa;AAEtC,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAOC,IAAI,EAAEC,MAAM,EAAEC,MAAM,EAAEC,OAAO,KAAK;EACtE,MAAMC,WAAW,GAAG,CAACP,IAAI,CAACQ,KAAK,EAAER,IAAI,CAACS,SAAS,EAAET,IAAI,CAACU,MAAM,CAAC;EAE7D,MAAMC,MAAM,GAAG,MAAMV,QAAQ,CAACU,MAAM,CAACR,IAAI,EAAEI,WAAW,CAAC;EAEvD,IAAI,CAACI,MAAM,EAAE;IACZ,OAAO;MACNC,KAAK,EAAE,iBAAiB;MACxBC,GAAG,EAAE;IACN,CAAC;EACF;EAEA,MAAMjB,UAAU,CAACQ,MAAM,EAAEC,MAAM,EAAEC,OAAO,CAAC;EAEzC,MAAMQ,IAAI,GAAG,MAAMhB,OAAO,CAACO,MAAM,CAAC;EAElC,MAAMU,QAAQ,GAAG,MAAMlB,WAAW,CAACQ,MAAM,CAAC;EAE1C,MAAMW,KAAK,GAAG,MAAMjB,QAAQ,CAAC,CAAC;EAE9B,MAAMkB,kBAAkB,GAAGF,QAAQ,CAACG,GAAG,CAAEC,OAAO,IAAK;IACpD,MAAMC,IAAI,GAAGJ,KAAK,CAACK,IAAI,CAAC,CAAC;MAAEC;IAAG,CAAC,KAAKA,EAAE,KAAKH,OAAO,CAACI,QAAQ,CAAC;IAC5D,OAAO;MACN,GAAGJ,OAAO;MACVK,MAAM,EAAEJ,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEK;IACf,CAAC;EACF,CAAC,CAAC;EAEF,OAAO;IACNb,KAAK,EAAE,IAAI;IACXC,GAAG,EAAE;MAAE,GAAGC,IAAI;MAAEC,QAAQ,EAAEE;IAAmB;EAC9C,CAAC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}