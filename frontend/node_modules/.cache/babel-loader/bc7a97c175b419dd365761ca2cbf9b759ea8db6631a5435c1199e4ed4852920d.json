{"ast":null,"code":"var _jsxFileName = \"/Users/evgeniapodoprigora/Desktop/practice/src/pages/post/components/comments/comments.js\",\n  _s = $RefreshSig$();\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Icon } from '../../../../components';\nimport { Comment } from './components';\nimport { selectUserId, selectUserRole } from '../../../../selectors';\nimport { useServerRequest } from '../../../../hooks';\nimport { addCommentAsync } from '../../../../actions';\nimport { PROP_TYPE, ROLE } from '../../../../constants';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentsContainer = ({\n  className,\n  comments,\n  postId\n}) => {\n  _s();\n  const [newComment, setNewComment] = useState('');\n  const dispatch = useDispatch();\n  const userId = useSelector(selectUserId);\n  const userRole = useSelector(selectUserRole);\n  const serverRequest = useServerRequest();\n  const onNewCommentAdd = (userId, postId, newComment) => {\n    dispatch(addCommentAsync(serverRequest, userId, postId, newComment));\n    setNewComment('');\n  };\n  const isGuest = userRole === ROLE.GUEST;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [!isGuest && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"comment\",\n        value: newComment,\n        placeholder: \"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\",\n        onChange: ({\n          target\n        }) => setNewComment(target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Icon, {\n        id: \"fa-paper-plane-o\",\n        margin: \"0 12px 0 10px\",\n        size: \"20px\",\n        onClick: () => onNewCommentAdd(userId, postId, newComment)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments\",\n      children: comments.map(({\n        id,\n        author,\n        content,\n        publishedAt\n      }) => /*#__PURE__*/_jsxDEV(Comment, {\n        id: id,\n        postId: postId,\n        author: author,\n        content: content,\n        publishedAt: publishedAt\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, this);\n};\n_s(CommentsContainer, \"BTjZGSyHw1h53JWKnB8VABJMBnk=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useServerRequest];\n});\n_c = CommentsContainer;\nexport const Comments = styled(CommentsContainer)`\n\twidth: 580px;\n\tmargin: 20px auto;\n\n\t.new-comment {\n\t\tdisplay: flex;\n\n\t\ttextarea {\n\t\t\twidth: 540px;\n\t\t\theight: 100px;\n\t\t\tresize: none;\n\t\t\tpadding: 10px;\n\t\t\tfont-size: 16px;\n\t\t\tfont-family: inherit;\n\t\t}\n\t}\n`;\nComments.propTypes = {\n  comments: PropTypes.arrayOf(PROP_TYPE.COMMENT).isRequired,\n  postId: PropTypes.string.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"CommentsContainer\");","map":{"version":3,"names":["PropTypes","useState","useDispatch","useSelector","Icon","Comment","selectUserId","selectUserRole","useServerRequest","addCommentAsync","PROP_TYPE","ROLE","styled","jsxDEV","_jsxDEV","CommentsContainer","className","comments","postId","_s","newComment","setNewComment","dispatch","userId","userRole","serverRequest","onNewCommentAdd","isGuest","GUEST","children","name","value","placeholder","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","id","margin","size","onClick","map","author","content","publishedAt","_c","Comments","propTypes","arrayOf","COMMENT","isRequired","string","$RefreshReg$"],"sources":["/Users/evgeniapodoprigora/Desktop/practice/src/pages/post/components/comments/comments.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Icon } from '../../../../components';\nimport { Comment } from './components';\nimport { selectUserId, selectUserRole } from '../../../../selectors';\nimport { useServerRequest } from '../../../../hooks';\nimport { addCommentAsync } from '../../../../actions';\nimport { PROP_TYPE, ROLE } from '../../../../constants';\nimport styled from 'styled-components';\n\nconst CommentsContainer = ({ className, comments, postId }) => {\n\tconst [newComment, setNewComment] = useState('');\n\tconst dispatch = useDispatch();\n\tconst userId = useSelector(selectUserId);\n\tconst userRole = useSelector(selectUserRole);\n\tconst serverRequest = useServerRequest();\n\n\tconst onNewCommentAdd = (userId, postId, newComment) => {\n\t\tdispatch(addCommentAsync(serverRequest, userId, postId, newComment));\n\t\tsetNewComment('');\n\t};\n\n\tconst isGuest = userRole === ROLE.GUEST;\n\treturn (\n\t\t<div className={className}>\n\t\t\t{!isGuest && (\n\t\t\t\t<div className=\"new-comment\">\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tname=\"comment\"\n\t\t\t\t\t\tvalue={newComment}\n\t\t\t\t\t\tplaceholder=\"Комментарий\"\n\t\t\t\t\t\tonChange={({ target }) => setNewComment(target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Icon\n\t\t\t\t\t\tid=\"fa-paper-plane-o\"\n\t\t\t\t\t\tmargin=\"0 12px 0 10px\"\n\t\t\t\t\t\tsize=\"20px\"\n\t\t\t\t\t\tonClick={() => onNewCommentAdd(userId, postId, newComment)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t<div className=\"comments\">\n\t\t\t\t{comments.map(({ id, author, content, publishedAt }) => (\n\t\t\t\t\t<Comment\n\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\tid={id}\n\t\t\t\t\t\tpostId={postId}\n\t\t\t\t\t\tauthor={author}\n\t\t\t\t\t\tcontent={content}\n\t\t\t\t\t\tpublishedAt={publishedAt}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport const Comments = styled(CommentsContainer)`\n\twidth: 580px;\n\tmargin: 20px auto;\n\n\t.new-comment {\n\t\tdisplay: flex;\n\n\t\ttextarea {\n\t\t\twidth: 540px;\n\t\t\theight: 100px;\n\t\t\tresize: none;\n\t\t\tpadding: 10px;\n\t\t\tfont-size: 16px;\n\t\t\tfont-family: inherit;\n\t\t}\n\t}\n`;\n\nComments.propTypes = {\n\tcomments: PropTypes.arrayOf(PROP_TYPE.COMMENT).isRequired,\n\tpostId: PropTypes.string.isRequired,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}