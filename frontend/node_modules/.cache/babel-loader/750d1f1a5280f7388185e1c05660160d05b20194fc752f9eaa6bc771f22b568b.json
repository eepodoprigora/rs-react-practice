{"ast":null,"code":"import { addSession, deleteSession, getSession } from './api';\nexport const sessions = {\n  create(user) {\n    const hash = Math.random().toFixed(50);\n    addSession(hash, user);\n    return hash;\n  },\n  async remove(hash) {\n    const session = await getSession();\n    if (!session) return;\n    deleteSession(session.id);\n  },\n  async access(hash, accessRoles) {\n    const dbSession = await getSession(hash);\n    return !!(dbSession !== null && dbSession !== void 0 && dbSession.user) && accessRoles.includes(dbSession.user.roleId);\n  }\n};","map":{"version":3,"names":["addSession","deleteSession","getSession","sessions","create","user","hash","Math","random","toFixed","remove","session","id","access","accessRoles","dbSession","includes","roleId"],"sources":["/Users/evgeniapodoprigora/Desktop/practice/frontend/src/bff/sessions.js"],"sourcesContent":["import { addSession, deleteSession, getSession } from './api';\n\nexport const sessions = {\n\tcreate(user) {\n\t\tconst hash = Math.random().toFixed(50);\n\n\t\taddSession(hash, user);\n\n\t\treturn hash;\n\t},\n\tasync remove(hash) {\n\t\tconst session = await getSession();\n\n\t\tif (!session) return;\n\t\tdeleteSession(session.id);\n\t},\n\tasync access(hash, accessRoles) {\n\t\tconst dbSession = await getSession(hash);\n\n\t\treturn !!dbSession?.user && accessRoles.includes(dbSession.user.roleId);\n\t},\n};\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAE7D,OAAO,MAAMC,QAAQ,GAAG;EACvBC,MAAMA,CAACC,IAAI,EAAE;IACZ,MAAMC,IAAI,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,OAAO,CAAC,EAAE,CAAC;IAEtCT,UAAU,CAACM,IAAI,EAAED,IAAI,CAAC;IAEtB,OAAOC,IAAI;EACZ,CAAC;EACD,MAAMI,MAAMA,CAACJ,IAAI,EAAE;IAClB,MAAMK,OAAO,GAAG,MAAMT,UAAU,CAAC,CAAC;IAElC,IAAI,CAACS,OAAO,EAAE;IACdV,aAAa,CAACU,OAAO,CAACC,EAAE,CAAC;EAC1B,CAAC;EACD,MAAMC,MAAMA,CAACP,IAAI,EAAEQ,WAAW,EAAE;IAC/B,MAAMC,SAAS,GAAG,MAAMb,UAAU,CAACI,IAAI,CAAC;IAExC,OAAO,CAAC,EAACS,SAAS,aAATA,SAAS,eAATA,SAAS,CAAEV,IAAI,KAAIS,WAAW,CAACE,QAAQ,CAACD,SAAS,CAACV,IAAI,CAACY,MAAM,CAAC;EACxE;AACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}