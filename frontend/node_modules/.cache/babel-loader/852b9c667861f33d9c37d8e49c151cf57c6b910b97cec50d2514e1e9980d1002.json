{"ast":null,"code":"import{getComments,getPosts}from'../api';import{getCommentsCount}from'../utils';export const fetchPosts=async(searchPhrase,page,limit)=>{const[{posts,lastPage},comments]=await Promise.all([getPosts(searchPhrase,page,limit),getComments()]);return{error:null,res:posts.map(post=>({...post,commentsCount:getCommentsCount(comments,post.id)})),lastPage:lastPage};};","map":{"version":3,"names":["getComments","getPosts","getCommentsCount","fetchPosts","searchPhrase","page","limit","posts","lastPage","comments","Promise","all","error","res","map","post","commentsCount","id"],"sources":["/Users/evgeniapodoprigora/Desktop/practice/frontend/src/bff/operations/fetch-posts.js"],"sourcesContent":["import { getComments, getPosts } from '../api';\nimport { getCommentsCount } from '../utils';\n\nexport const fetchPosts = async (searchPhrase, page, limit) => {\n\tconst [{ posts, lastPage }, comments] = await Promise.all([\n\t\tgetPosts(searchPhrase, page, limit),\n\t\tgetComments(),\n\t]);\n\n\treturn {\n\t\terror: null,\n\t\tres: posts.map((post) => ({\n\t\t\t...post,\n\t\t\tcommentsCount: getCommentsCount(comments, post.id),\n\t\t})),\n\t\tlastPage: lastPage,\n\t};\n};\n"],"mappings":"AAAA,OAASA,WAAW,CAAEC,QAAQ,KAAQ,QAAQ,CAC9C,OAASC,gBAAgB,KAAQ,UAAU,CAE3C,MAAO,MAAM,CAAAC,UAAU,CAAG,KAAAA,CAAOC,YAAY,CAAEC,IAAI,CAAEC,KAAK,GAAK,CAC9D,KAAM,CAAC,CAAEC,KAAK,CAAEC,QAAS,CAAC,CAAEC,QAAQ,CAAC,CAAG,KAAM,CAAAC,OAAO,CAACC,GAAG,CAAC,CACzDV,QAAQ,CAACG,YAAY,CAAEC,IAAI,CAAEC,KAAK,CAAC,CACnCN,WAAW,CAAC,CAAC,CACb,CAAC,CAEF,MAAO,CACNY,KAAK,CAAE,IAAI,CACXC,GAAG,CAAEN,KAAK,CAACO,GAAG,CAAEC,IAAI,GAAM,CACzB,GAAGA,IAAI,CACPC,aAAa,CAAEd,gBAAgB,CAACO,QAAQ,CAAEM,IAAI,CAACE,EAAE,CAClD,CAAC,CAAC,CAAC,CACHT,QAAQ,CAAEA,QACX,CAAC,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}