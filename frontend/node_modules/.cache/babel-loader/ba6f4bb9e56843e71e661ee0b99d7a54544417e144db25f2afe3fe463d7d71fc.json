{"ast":null,"code":"import{sessions}from'../sessions';import{getUser,addUser}from'../api';export const register=async(regLogin,regPassword)=>{const existedUser=await getUser(regLogin);if(existedUser){return{error:'Такой логин уже занят',res:null};}const user=await addUser(regLogin,regPassword);return{error:null,res:{id:user.id,login:user.login,roleId:user.role_id,session:sessions.create(user)}};};","map":{"version":3,"names":["sessions","getUser","addUser","register","regLogin","regPassword","existedUser","error","res","user","id","login","roleId","role_id","session","create"],"sources":["/Users/evgeniapodoprigora/Desktop/practice/frontend/src/bff/operations/register.js"],"sourcesContent":["import { sessions } from '../sessions';\nimport { getUser, addUser } from '../api';\n\nexport const register = async (regLogin, regPassword) => {\n\tconst existedUser = await getUser(regLogin);\n\n\tif (existedUser) {\n\t\treturn {\n\t\t\terror: 'Такой логин уже занят',\n\t\t\tres: null,\n\t\t};\n\t}\n\n\tconst user = await addUser(regLogin, regPassword);\n\n\treturn {\n\t\terror: null,\n\t\tres: {\n\t\t\tid: user.id,\n\t\t\tlogin: user.login,\n\t\t\troleId: user.role_id,\n\t\t\tsession: sessions.create(user),\n\t\t},\n\t};\n};\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,aAAa,CACtC,OAASC,OAAO,CAAEC,OAAO,KAAQ,QAAQ,CAEzC,MAAO,MAAM,CAAAC,QAAQ,CAAG,KAAAA,CAAOC,QAAQ,CAAEC,WAAW,GAAK,CACxD,KAAM,CAAAC,WAAW,CAAG,KAAM,CAAAL,OAAO,CAACG,QAAQ,CAAC,CAE3C,GAAIE,WAAW,CAAE,CAChB,MAAO,CACNC,KAAK,CAAE,uBAAuB,CAC9BC,GAAG,CAAE,IACN,CAAC,CACF,CAEA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAP,OAAO,CAACE,QAAQ,CAAEC,WAAW,CAAC,CAEjD,MAAO,CACNE,KAAK,CAAE,IAAI,CACXC,GAAG,CAAE,CACJE,EAAE,CAAED,IAAI,CAACC,EAAE,CACXC,KAAK,CAAEF,IAAI,CAACE,KAAK,CACjBC,MAAM,CAAEH,IAAI,CAACI,OAAO,CACpBC,OAAO,CAAEd,QAAQ,CAACe,MAAM,CAACN,IAAI,CAC9B,CACD,CAAC,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}