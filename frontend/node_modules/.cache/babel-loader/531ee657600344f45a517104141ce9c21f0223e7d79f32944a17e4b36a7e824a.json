{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useStore } from 'react-redux';\nexport const useResetForm = reset => {\n  _s();\n  const store = useStore();\n  useEffect(() => {\n    let currentWasLogout = store.getState().app.wasLogout;\n    return store.subscribe(() => {\n      let prevWasLogout = currentWasLogout;\n      currentWasLogout = store.getState().app.wasLogout;\n      if (currentWasLogout !== prevWasLogout) {\n        reset();\n      }\n    });\n  }, [reset, store]);\n};\n_s(useResetForm, \"7WX0f3w9+vyXsBWAiuPF4CU1RJU=\", false, function () {\n  return [useStore];\n});","map":{"version":3,"names":["useEffect","useStore","useResetForm","reset","_s","store","currentWasLogout","getState","app","wasLogout","subscribe","prevWasLogout"],"sources":["/Users/evgeniapodoprigora/Desktop/practice/src/hooks/use-reset-form.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useStore } from 'react-redux';\n\nexport const useResetForm = (reset) => {\n\tconst store = useStore();\n\tuseEffect(() => {\n\t\tlet currentWasLogout = store.getState().app.wasLogout;\n\t\treturn store.subscribe(() => {\n\t\t\tlet prevWasLogout = currentWasLogout;\n\t\t\tcurrentWasLogout = store.getState().app.wasLogout;\n\n\t\t\tif (currentWasLogout !== prevWasLogout) {\n\t\t\t\treset();\n\t\t\t}\n\t\t});\n\t}, [reset, store]);\n};\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,aAAa;AAEtC,OAAO,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACtC,MAAMC,KAAK,GAAGJ,QAAQ,CAAC,CAAC;EACxBD,SAAS,CAAC,MAAM;IACf,IAAIM,gBAAgB,GAAGD,KAAK,CAACE,QAAQ,CAAC,CAAC,CAACC,GAAG,CAACC,SAAS;IACrD,OAAOJ,KAAK,CAACK,SAAS,CAAC,MAAM;MAC5B,IAAIC,aAAa,GAAGL,gBAAgB;MACpCA,gBAAgB,GAAGD,KAAK,CAACE,QAAQ,CAAC,CAAC,CAACC,GAAG,CAACC,SAAS;MAEjD,IAAIH,gBAAgB,KAAKK,aAAa,EAAE;QACvCR,KAAK,CAAC,CAAC;MACR;IACD,CAAC,CAAC;EACH,CAAC,EAAE,CAACA,KAAK,EAAEE,KAAK,CAAC,CAAC;AACnB,CAAC;AAACD,EAAA,CAbWF,YAAY;EAAA,QACVD,QAAQ;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}