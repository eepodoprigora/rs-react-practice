{"ast":null,"code":"import { transformPost } from '../transformers';\nexport const getPosts = async (searchPhrase, page, limit) => {\n  const searchQueryMain = 'http://localhost:3005/posts';\n  // Загружаем все статьи без фильтрации\n  return fetch(searchQueryMain).then(response => response.json()).then(loadedPosts => {\n    console.log(loadedPosts, 'loadedPosts');\n    // Фильтруем статьи по заголовку\n    const filteredPosts = loadedPosts.filter(post => post.title.toLowerCase().includes(searchPhrase.toLowerCase()));\n\n    // Пагинация: выбираем нужные статьи на основе текущей страницы и лимита\n    const startIndex = (page - 1) * limit;\n    const paginatedPosts = filteredPosts.slice(startIndex, startIndex + limit);\n    return {\n      posts: paginatedPosts.map(transformPost),\n      lastPage: Math.ceil(filteredPosts.length / limit)\n    };\n  });\n};","map":{"version":3,"names":["transformPost","getPosts","searchPhrase","page","limit","searchQueryMain","fetch","then","response","json","loadedPosts","console","log","filteredPosts","filter","post","title","toLowerCase","includes","startIndex","paginatedPosts","slice","posts","map","lastPage","Math","ceil","length"],"sources":["/Users/evgeniapodoprigora/Desktop/practice/src/bff/api/get-posts.js"],"sourcesContent":["import { transformPost } from '../transformers';\n\nexport const getPosts = async (searchPhrase, page, limit) => {\n\tconst searchQueryMain = 'http://localhost:3005/posts';\n\t// Загружаем все статьи без фильтрации\n\treturn fetch(searchQueryMain)\n\t\t.then((response) => response.json())\n\t\t.then((loadedPosts) => {\n\t\t\tconsole.log(loadedPosts, 'loadedPosts');\n\t\t\t// Фильтруем статьи по заголовку\n\t\t\tconst filteredPosts = loadedPosts.filter((post) =>\n\t\t\t\tpost.title.toLowerCase().includes(searchPhrase.toLowerCase()),\n\t\t\t);\n\n\t\t\t// Пагинация: выбираем нужные статьи на основе текущей страницы и лимита\n\t\t\tconst startIndex = (page - 1) * limit;\n\t\t\tconst paginatedPosts = filteredPosts.slice(startIndex, startIndex + limit);\n\n\t\t\treturn {\n\t\t\t\tposts: paginatedPosts.map(transformPost),\n\t\t\t\tlastPage: Math.ceil(filteredPosts.length / limit),\n\t\t\t};\n\t\t});\n};\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,iBAAiB;AAE/C,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAOC,YAAY,EAAEC,IAAI,EAAEC,KAAK,KAAK;EAC5D,MAAMC,eAAe,GAAG,6BAA6B;EACrD;EACA,OAAOC,KAAK,CAACD,eAAe,CAAC,CAC3BE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,WAAW,IAAK;IACtBC,OAAO,CAACC,GAAG,CAACF,WAAW,EAAE,aAAa,CAAC;IACvC;IACA,MAAMG,aAAa,GAAGH,WAAW,CAACI,MAAM,CAAEC,IAAI,IAC7CA,IAAI,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAChB,YAAY,CAACe,WAAW,CAAC,CAAC,CAC7D,CAAC;;IAED;IACA,MAAME,UAAU,GAAG,CAAChB,IAAI,GAAG,CAAC,IAAIC,KAAK;IACrC,MAAMgB,cAAc,GAAGP,aAAa,CAACQ,KAAK,CAACF,UAAU,EAAEA,UAAU,GAAGf,KAAK,CAAC;IAE1E,OAAO;MACNkB,KAAK,EAAEF,cAAc,CAACG,GAAG,CAACvB,aAAa,CAAC;MACxCwB,QAAQ,EAAEC,IAAI,CAACC,IAAI,CAACb,aAAa,CAACc,MAAM,GAAGvB,KAAK;IACjD,CAAC;EACF,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}