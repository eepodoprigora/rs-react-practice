{"ast":null,"code":"import { getUser } from './get-user';\nimport { addUser } from './add-user';\nimport { sessions } from './sessions';\nexport const server = {\n  async logout(session) {\n    sessions.remove(session);\n  },\n  async authorize(authLogin, authPassword) {\n    const user = await getUser(authLogin);\n    console.log(user, 'user12');\n    console.log(authPassword, user.password, 'Пароль');\n    if (!user) {\n      return {\n        error: 'Такой пользователь не найден',\n        res: null\n      };\n    }\n    if (authPassword !== user.password) {\n      return {\n        error: 'Неверный пароль',\n        res: null\n      };\n    }\n    return {\n      error: null,\n      res: {\n        id: user.id,\n        login: user.login,\n        roleId: user.role_id,\n        session: sessions.create(user)\n      }\n    };\n  },\n  async register(regLogin, regPassword) {\n    const user = await getUser(regLogin);\n    if (user) {\n      return {\n        error: 'Такой логин уже занят',\n        res: null\n      };\n    }\n    await addUser(regLogin, regPassword);\n    return {\n      error: null,\n      res: {\n        id: user.id,\n        login: user.login,\n        roleId: user.role_id,\n        session: sessions.create(user)\n      }\n    };\n  }\n};","map":{"version":3,"names":["getUser","addUser","sessions","server","logout","session","remove","authorize","authLogin","authPassword","user","console","log","password","error","res","id","login","roleId","role_id","create","register","regLogin","regPassword"],"sources":["/Users/evgeniapodoprigora/Desktop/practice/src/bff/server.js"],"sourcesContent":["import { getUser } from './get-user';\nimport { addUser } from './add-user';\nimport { sessions } from './sessions';\n\nexport const server = {\n\tasync logout(session) {\n\t\tsessions.remove(session);\n\t},\n\tasync authorize(authLogin, authPassword) {\n\t\tconst user = await getUser(authLogin);\n\n\t\tconsole.log(user, 'user12');\n\t\tconsole.log(authPassword, user.password, 'Пароль');\n\n\t\tif (!user) {\n\t\t\treturn {\n\t\t\t\terror: 'Такой пользователь не найден',\n\t\t\t\tres: null,\n\t\t\t};\n\t\t}\n\t\tif (authPassword !== user.password) {\n\t\t\treturn {\n\t\t\t\terror: 'Неверный пароль',\n\t\t\t\tres: null,\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\terror: null,\n\t\t\tres: {\n\t\t\t\tid: user.id,\n\t\t\t\tlogin: user.login,\n\t\t\t\troleId: user.role_id,\n\t\t\t\tsession: sessions.create(user),\n\t\t\t},\n\t\t};\n\t},\n\tasync register(regLogin, regPassword) {\n\t\tconst user = await getUser(regLogin);\n\n\t\tif (user) {\n\t\t\treturn {\n\t\t\t\terror: 'Такой логин уже занят',\n\t\t\t\tres: null,\n\t\t\t};\n\t\t}\n\n\t\tawait addUser(regLogin, regPassword);\n\n\t\treturn {\n\t\t\terror: null,\n\t\t\tres: {\n\t\t\t\tid: user.id,\n\t\t\t\tlogin: user.login,\n\t\t\t\troleId: user.role_id,\n\t\t\t\tsession: sessions.create(user),\n\t\t\t},\n\t\t};\n\t},\n};\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,YAAY;AACpC,SAASC,OAAO,QAAQ,YAAY;AACpC,SAASC,QAAQ,QAAQ,YAAY;AAErC,OAAO,MAAMC,MAAM,GAAG;EACrB,MAAMC,MAAMA,CAACC,OAAO,EAAE;IACrBH,QAAQ,CAACI,MAAM,CAACD,OAAO,CAAC;EACzB,CAAC;EACD,MAAME,SAASA,CAACC,SAAS,EAAEC,YAAY,EAAE;IACxC,MAAMC,IAAI,GAAG,MAAMV,OAAO,CAACQ,SAAS,CAAC;IAErCG,OAAO,CAACC,GAAG,CAACF,IAAI,EAAE,QAAQ,CAAC;IAC3BC,OAAO,CAACC,GAAG,CAACH,YAAY,EAAEC,IAAI,CAACG,QAAQ,EAAE,QAAQ,CAAC;IAElD,IAAI,CAACH,IAAI,EAAE;MACV,OAAO;QACNI,KAAK,EAAE,8BAA8B;QACrCC,GAAG,EAAE;MACN,CAAC;IACF;IACA,IAAIN,YAAY,KAAKC,IAAI,CAACG,QAAQ,EAAE;MACnC,OAAO;QACNC,KAAK,EAAE,iBAAiB;QACxBC,GAAG,EAAE;MACN,CAAC;IACF;IAEA,OAAO;MACND,KAAK,EAAE,IAAI;MACXC,GAAG,EAAE;QACJC,EAAE,EAAEN,IAAI,CAACM,EAAE;QACXC,KAAK,EAAEP,IAAI,CAACO,KAAK;QACjBC,MAAM,EAAER,IAAI,CAACS,OAAO;QACpBd,OAAO,EAAEH,QAAQ,CAACkB,MAAM,CAACV,IAAI;MAC9B;IACD,CAAC;EACF,CAAC;EACD,MAAMW,QAAQA,CAACC,QAAQ,EAAEC,WAAW,EAAE;IACrC,MAAMb,IAAI,GAAG,MAAMV,OAAO,CAACsB,QAAQ,CAAC;IAEpC,IAAIZ,IAAI,EAAE;MACT,OAAO;QACNI,KAAK,EAAE,uBAAuB;QAC9BC,GAAG,EAAE;MACN,CAAC;IACF;IAEA,MAAMd,OAAO,CAACqB,QAAQ,EAAEC,WAAW,CAAC;IAEpC,OAAO;MACNT,KAAK,EAAE,IAAI;MACXC,GAAG,EAAE;QACJC,EAAE,EAAEN,IAAI,CAACM,EAAE;QACXC,KAAK,EAAEP,IAAI,CAACO,KAAK;QACjBC,MAAM,EAAER,IAAI,CAACS,OAAO;QACpBd,OAAO,EAAEH,QAAQ,CAACkB,MAAM,CAACV,IAAI;MAC9B;IACD,CAAC;EACF;AACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}