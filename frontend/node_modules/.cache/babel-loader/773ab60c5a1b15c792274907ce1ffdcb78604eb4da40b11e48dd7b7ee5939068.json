{"ast":null,"code":"import{setUserRole}from'../api';import{sessions}from'../sessions';import{ROLE}from'../constants';export const updateUserRole=async(hash,userId,newUserRoleId)=>{const accessRoles=[ROLE.ADMIN];const access=await sessions.access(hash,accessRoles);if(!access){return{error:'Доступ запрещен',res:null};}setUserRole(userId,newUserRoleId);return{error:null,res:true};};","map":{"version":3,"names":["setUserRole","sessions","ROLE","updateUserRole","hash","userId","newUserRoleId","accessRoles","ADMIN","access","error","res"],"sources":["/Users/evgeniapodoprigora/Desktop/practice/frontend/src/bff/operations/update-user-role.js"],"sourcesContent":["import { setUserRole } from '../api';\nimport { sessions } from '../sessions';\nimport { ROLE } from '../constants';\n\nexport const updateUserRole = async (hash, userId, newUserRoleId) => {\n\tconst accessRoles = [ROLE.ADMIN];\n\tconst access = await sessions.access(hash, accessRoles);\n\n\tif (!access) {\n\t\treturn {\n\t\t\terror: 'Доступ запрещен',\n\t\t\tres: null,\n\t\t};\n\t}\n\n\tsetUserRole(userId, newUserRoleId);\n\n\treturn {\n\t\terror: null,\n\t\tres: true,\n\t};\n};\n"],"mappings":"AAAA,OAASA,WAAW,KAAQ,QAAQ,CACpC,OAASC,QAAQ,KAAQ,aAAa,CACtC,OAASC,IAAI,KAAQ,cAAc,CAEnC,MAAO,MAAM,CAAAC,cAAc,CAAG,KAAAA,CAAOC,IAAI,CAAEC,MAAM,CAAEC,aAAa,GAAK,CACpE,KAAM,CAAAC,WAAW,CAAG,CAACL,IAAI,CAACM,KAAK,CAAC,CAChC,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAR,QAAQ,CAACQ,MAAM,CAACL,IAAI,CAAEG,WAAW,CAAC,CAEvD,GAAI,CAACE,MAAM,CAAE,CACZ,MAAO,CACNC,KAAK,CAAE,iBAAiB,CACxBC,GAAG,CAAE,IACN,CAAC,CACF,CAEAX,WAAW,CAACK,MAAM,CAAEC,aAAa,CAAC,CAElC,MAAO,CACNI,KAAK,CAAE,IAAI,CACXC,GAAG,CAAE,IACN,CAAC,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}