{"ast":null,"code":"import { setPostData } from './set-post-data';\nexport const addCommentAsync = (requestServer, userId, postId, content) => dispatch => {\n  console.log('addPostComment', userId, postId, content);\n  requestServer('addPostComment', userId, postId, content).then(postData => {\n    if (postData && postData.res) {\n      console.log(postData, 'postData3'); // Проверка структуры ответа\n      dispatch(setPostData(postData.res));\n    } else {\n      console.error('Ошибка: неверный формат ответа');\n    }\n  }).catch(error => {\n    console.error('Ошибка при добавлении комментария:', error);\n  });\n};","map":{"version":3,"names":["setPostData","addCommentAsync","requestServer","userId","postId","content","dispatch","console","log","then","postData","res","error","catch"],"sources":["/Users/evgeniapodoprigora/Desktop/practice/src/actions/add-comment-async.js"],"sourcesContent":["import { setPostData } from './set-post-data';\n\nexport const addCommentAsync = (requestServer, userId, postId, content) => (dispatch) => {\n\tconsole.log('addPostComment', userId, postId, content);\n\trequestServer('addPostComment', userId, postId, content)\n\t\t.then((postData) => {\n\t\t\tif (postData && postData.res) {\n\t\t\t\tconsole.log(postData, 'postData3'); // Проверка структуры ответа\n\t\t\t\tdispatch(setPostData(postData.res));\n\t\t\t} else {\n\t\t\t\tconsole.error('Ошибка: неверный формат ответа');\n\t\t\t}\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Ошибка при добавлении комментария:', error);\n\t\t});\n};\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,iBAAiB;AAE7C,OAAO,MAAMC,eAAe,GAAGA,CAACC,aAAa,EAAEC,MAAM,EAAEC,MAAM,EAAEC,OAAO,KAAMC,QAAQ,IAAK;EACxFC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEL,MAAM,EAAEC,MAAM,EAAEC,OAAO,CAAC;EACtDH,aAAa,CAAC,gBAAgB,EAAEC,MAAM,EAAEC,MAAM,EAAEC,OAAO,CAAC,CACtDI,IAAI,CAAEC,QAAQ,IAAK;IACnB,IAAIA,QAAQ,IAAIA,QAAQ,CAACC,GAAG,EAAE;MAC7BJ,OAAO,CAACC,GAAG,CAACE,QAAQ,EAAE,WAAW,CAAC,CAAC,CAAC;MACpCJ,QAAQ,CAACN,WAAW,CAACU,QAAQ,CAACC,GAAG,CAAC,CAAC;IACpC,CAAC,MAAM;MACNJ,OAAO,CAACK,KAAK,CAAC,gCAAgC,CAAC;IAChD;EACD,CAAC,CAAC,CACDC,KAAK,CAAED,KAAK,IAAK;IACjBL,OAAO,CAACK,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;EAC3D,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}