{"ast":null,"code":"import{sessions}from'../sessions';import{getUser}from'../api';export const authorize=async(authLogin,authPassword)=>{const user=await getUser(authLogin);if(!user){return{error:'Такой пользователь не найден',res:null};}const{id,login,password,roleId}=user;if(authPassword!==password){return{error:'Неверный пароль',res:null};}return{error:null,res:{id,login,roleId,session:sessions.create(user)}};};","map":{"version":3,"names":["sessions","getUser","authorize","authLogin","authPassword","user","error","res","id","login","password","roleId","session","create"],"sources":["/Users/evgeniapodoprigora/Desktop/practice/frontend/src/bff/operations/authorize.js"],"sourcesContent":["import { sessions } from '../sessions';\nimport { getUser } from '../api';\n\nexport const authorize = async (authLogin, authPassword) => {\n\tconst user = await getUser(authLogin);\n\tif (!user) {\n\t\treturn {\n\t\t\terror: 'Такой пользователь не найден',\n\t\t\tres: null,\n\t\t};\n\t}\n\n\tconst { id, login, password, roleId } = user;\n\tif (authPassword !== password) {\n\t\treturn {\n\t\t\terror: 'Неверный пароль',\n\t\t\tres: null,\n\t\t};\n\t}\n\n\treturn {\n\t\terror: null,\n\t\tres: {\n\t\t\tid,\n\t\t\tlogin,\n\t\t\troleId,\n\t\t\tsession: sessions.create(user),\n\t\t},\n\t};\n};\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,aAAa,CACtC,OAASC,OAAO,KAAQ,QAAQ,CAEhC,MAAO,MAAM,CAAAC,SAAS,CAAG,KAAAA,CAAOC,SAAS,CAAEC,YAAY,GAAK,CAC3D,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAJ,OAAO,CAACE,SAAS,CAAC,CACrC,GAAI,CAACE,IAAI,CAAE,CACV,MAAO,CACNC,KAAK,CAAE,8BAA8B,CACrCC,GAAG,CAAE,IACN,CAAC,CACF,CAEA,KAAM,CAAEC,EAAE,CAAEC,KAAK,CAAEC,QAAQ,CAAEC,MAAO,CAAC,CAAGN,IAAI,CAC5C,GAAID,YAAY,GAAKM,QAAQ,CAAE,CAC9B,MAAO,CACNJ,KAAK,CAAE,iBAAiB,CACxBC,GAAG,CAAE,IACN,CAAC,CACF,CAEA,MAAO,CACND,KAAK,CAAE,IAAI,CACXC,GAAG,CAAE,CACJC,EAAE,CACFC,KAAK,CACLE,MAAM,CACNC,OAAO,CAAEZ,QAAQ,CAACa,MAAM,CAACR,IAAI,CAC9B,CACD,CAAC,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}