{"ast":null,"code":"import { getComments, getPosts } from '../api';\nimport { getCommentsCount } from '../utils';\nexport const fetchPosts = async (searchPhrase, page, limit) => {\n  const [{\n    posts,\n    lastPage\n  }, comments] = await Promise.all([getPosts(page, limit), getComments()]);\n  console.log(posts, lastPage, 'posts, lastPage');\n  return {\n    error: null,\n    res: posts.map(post => ({\n      ...post,\n      commentsCount: getCommentsCount(comments, post.id)\n    })),\n    lastPage: lastPage\n  };\n};","map":{"version":3,"names":["getComments","getPosts","getCommentsCount","fetchPosts","searchPhrase","page","limit","posts","lastPage","comments","Promise","all","console","log","error","res","map","post","commentsCount","id"],"sources":["/Users/evgeniapodoprigora/Desktop/practice/src/bff/operations/fetch-posts.js"],"sourcesContent":["import { getComments, getPosts } from '../api';\nimport { getCommentsCount } from '../utils';\n\nexport const fetchPosts = async (searchPhrase, page, limit) => {\n\tconst [{ posts, lastPage }, comments] = await Promise.all([\n\t\tgetPosts(page, limit),\n\t\tgetComments(),\n\t]);\n\n\tconsole.log(posts, lastPage, 'posts, lastPage');\n\n\treturn {\n\t\terror: null,\n\t\tres: posts.map((post) => ({\n\t\t\t...post,\n\t\t\tcommentsCount: getCommentsCount(comments, post.id),\n\t\t})),\n\t\tlastPage: lastPage,\n\t};\n};\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,QAAQ;AAC9C,SAASC,gBAAgB,QAAQ,UAAU;AAE3C,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAOC,YAAY,EAAEC,IAAI,EAAEC,KAAK,KAAK;EAC9D,MAAM,CAAC;IAAEC,KAAK;IAAEC;EAAS,CAAC,EAAEC,QAAQ,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CACzDV,QAAQ,CAACI,IAAI,EAAEC,KAAK,CAAC,EACrBN,WAAW,CAAC,CAAC,CACb,CAAC;EAEFY,OAAO,CAACC,GAAG,CAACN,KAAK,EAAEC,QAAQ,EAAE,iBAAiB,CAAC;EAE/C,OAAO;IACNM,KAAK,EAAE,IAAI;IACXC,GAAG,EAAER,KAAK,CAACS,GAAG,CAAEC,IAAI,KAAM;MACzB,GAAGA,IAAI;MACPC,aAAa,EAAEhB,gBAAgB,CAACO,QAAQ,EAAEQ,IAAI,CAACE,EAAE;IAClD,CAAC,CAAC,CAAC;IACHX,QAAQ,EAAEA;EACX,CAAC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}