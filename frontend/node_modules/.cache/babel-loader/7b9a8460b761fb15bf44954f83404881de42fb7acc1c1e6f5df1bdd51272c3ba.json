{"ast":null,"code":"import { getPost } from '../api';\nimport { getPostCommentsWithAuthor } from '../utils';\nexport const fetchPost = async postId => {\n  let post;\n  let error;\n  try {\n    post = await getPost(postId);\n  } catch (postError) {\n    error = postError;\n  }\n  if (error) {\n    return {\n      error,\n      res: null\n    };\n  }\n  const commentsWithAuthor = await getPostCommentsWithAuthor(postId);\n  return {\n    error: null,\n    res: {\n      ...post,\n      comments: commentsWithAuthor\n    }\n  };\n};","map":{"version":3,"names":["getPost","getPostCommentsWithAuthor","fetchPost","postId","post","error","postError","res","commentsWithAuthor","comments"],"sources":["/Users/evgeniapodoprigora/Desktop/practice/frontend/src/bff/operations/fetch-post.js"],"sourcesContent":["import { getPost } from '../api';\nimport { getPostCommentsWithAuthor } from '../utils';\nexport const fetchPost = async (postId) => {\n\tlet post;\n\tlet error;\n\ttry {\n\t\tpost = await getPost(postId);\n\t} catch (postError) {\n\t\terror = postError;\n\t}\n\n\tif (error) {\n\t\treturn {\n\t\t\terror,\n\t\t\tres: null,\n\t\t};\n\t}\n\n\tconst commentsWithAuthor = await getPostCommentsWithAuthor(postId);\n\treturn {\n\t\terror: null,\n\t\tres: { ...post, comments: commentsWithAuthor },\n\t};\n};\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,QAAQ;AAChC,SAASC,yBAAyB,QAAQ,UAAU;AACpD,OAAO,MAAMC,SAAS,GAAG,MAAOC,MAAM,IAAK;EAC1C,IAAIC,IAAI;EACR,IAAIC,KAAK;EACT,IAAI;IACHD,IAAI,GAAG,MAAMJ,OAAO,CAACG,MAAM,CAAC;EAC7B,CAAC,CAAC,OAAOG,SAAS,EAAE;IACnBD,KAAK,GAAGC,SAAS;EAClB;EAEA,IAAID,KAAK,EAAE;IACV,OAAO;MACNA,KAAK;MACLE,GAAG,EAAE;IACN,CAAC;EACF;EAEA,MAAMC,kBAAkB,GAAG,MAAMP,yBAAyB,CAACE,MAAM,CAAC;EAClE,OAAO;IACNE,KAAK,EAAE,IAAI;IACXE,GAAG,EAAE;MAAE,GAAGH,IAAI;MAAEK,QAAQ,EAAED;IAAmB;EAC9C,CAAC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}