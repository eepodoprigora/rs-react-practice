{"ast":null,"code":"import{getComments,getUsers}from'../api';export const getPostCommentsWithAuthor=async postId=>{const comments=await getComments(postId);const users=await getUsers();return comments.map(comment=>{const user=users.find(_ref=>{let{id}=_ref;return id===comment.authorId;});return{...comment,author:user===null||user===void 0?void 0:user.login};});};","map":{"version":3,"names":["getComments","getUsers","getPostCommentsWithAuthor","postId","comments","users","map","comment","user","find","_ref","id","authorId","author","login"],"sources":["/Users/evgeniapodoprigora/Desktop/practice/frontend/src/bff/utils/get-post-comments-with-author.js"],"sourcesContent":["import { getComments, getUsers } from '../api';\n\nexport const getPostCommentsWithAuthor = async (postId) => {\n\tconst comments = await getComments(postId);\n\n\tconst users = await getUsers();\n\n\treturn comments.map((comment) => {\n\t\tconst user = users.find(({ id }) => id === comment.authorId);\n\t\treturn {\n\t\t\t...comment,\n\t\t\tauthor: user?.login,\n\t\t};\n\t});\n};\n"],"mappings":"AAAA,OAASA,WAAW,CAAEC,QAAQ,KAAQ,QAAQ,CAE9C,MAAO,MAAM,CAAAC,yBAAyB,CAAG,KAAO,CAAAC,MAAM,EAAK,CAC1D,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAJ,WAAW,CAACG,MAAM,CAAC,CAE1C,KAAM,CAAAE,KAAK,CAAG,KAAM,CAAAJ,QAAQ,CAAC,CAAC,CAE9B,MAAO,CAAAG,QAAQ,CAACE,GAAG,CAAEC,OAAO,EAAK,CAChC,KAAM,CAAAC,IAAI,CAAGH,KAAK,CAACI,IAAI,CAACC,IAAA,MAAC,CAAEC,EAAG,CAAC,CAAAD,IAAA,OAAK,CAAAC,EAAE,GAAKJ,OAAO,CAACK,QAAQ,GAAC,CAC5D,MAAO,CACN,GAAGL,OAAO,CACVM,MAAM,CAAEL,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEM,KACf,CAAC,CACF,CAAC,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}