{"ast":null,"code":"export function request(url, method, data) {\n  return fetch(url, {\n    headers: {\n      'content-type': 'application/json'\n    },\n    method: method || 'GET',\n    body: data ? JSON.stringify(data) : undefined\n  }).then(res => res.text()) // Временно выводим текст ответа\n  .then(text => {\n    console.log(text); // Смотрим, что вернул сервер\n    return JSON.parse(text); // Попробуем вручную распарсить\n  }).catch(error => console.error('Ошибка при разборе ответа:', error));\n}","map":{"version":3,"names":["request","url","method","data","fetch","headers","body","JSON","stringify","undefined","then","res","text","console","log","parse","catch","error"],"sources":["/Users/evgeniapodoprigora/Desktop/practice/frontend/src/utils/request.js"],"sourcesContent":["export function request(url, method, data) {\n\treturn fetch(url, {\n\t\theaders: {\n\t\t\t'content-type': 'application/json',\n\t\t},\n\t\tmethod: method || 'GET',\n\t\tbody: data ? JSON.stringify(data) : undefined,\n\t})\n\t\t.then((res) => res.text()) // Временно выводим текст ответа\n\t\t.then((text) => {\n\t\t\tconsole.log(text); // Смотрим, что вернул сервер\n\t\t\treturn JSON.parse(text); // Попробуем вручную распарсить\n\t\t})\n\t\t.catch((error) => console.error('Ошибка при разборе ответа:', error));\n}\n"],"mappings":"AAAA,OAAO,SAASA,OAAOA,CAACC,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAE;EAC1C,OAAOC,KAAK,CAACH,GAAG,EAAE;IACjBI,OAAO,EAAE;MACR,cAAc,EAAE;IACjB,CAAC;IACDH,MAAM,EAAEA,MAAM,IAAI,KAAK;IACvBI,IAAI,EAAEH,IAAI,GAAGI,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,GAAGM;EACrC,CAAC,CAAC,CACAC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;EAAA,CAC1BF,IAAI,CAAEE,IAAI,IAAK;IACfC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC,CAAC;IACnB,OAAOL,IAAI,CAACQ,KAAK,CAACH,IAAI,CAAC,CAAC,CAAC;EAC1B,CAAC,CAAC,CACDI,KAAK,CAAEC,KAAK,IAAKJ,OAAO,CAACI,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC,CAAC;AACvE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}