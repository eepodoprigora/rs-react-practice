{"ast":null,"code":"import { getPost, getComments, getUsers } from '../api';\nexport const fetchPost = async postId => {\n  const post = await getPost(postId);\n  const comments = await getComments(postId);\n  const users = await getUsers();\n  const commentsWithAuthor = comments.map(comment => {\n    const user = users.find(({\n      id\n    }) => id === comments.authorId);\n    return {\n      ...comment,\n      author: user\n    };\n  });\n  return {\n    error: null,\n    res: {\n      ...post,\n      comments\n    }\n  };\n};","map":{"version":3,"names":["getPost","getComments","getUsers","fetchPost","postId","post","comments","users","commentsWithAuthor","map","comment","user","find","id","authorId","author","error","res"],"sources":["/Users/evgeniapodoprigora/Desktop/practice/src/bff/operations/fetch-post.js"],"sourcesContent":["import { getPost, getComments, getUsers } from '../api';\nexport const fetchPost = async (postId) => {\n\tconst post = await getPost(postId);\n\n\tconst comments = await getComments(postId);\n\n\tconst users = await getUsers();\n\n\tconst commentsWithAuthor = comments.map((comment) => {\n\t\tconst user = users.find(({ id }) => id === comments.authorId);\n\t\treturn {\n\t\t\t...comment,\n\t\t\tauthor: user,\n\t\t};\n\t});\n\n\treturn {\n\t\terror: null,\n\t\tres: { ...post, comments },\n\t};\n};\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,WAAW,EAAEC,QAAQ,QAAQ,QAAQ;AACvD,OAAO,MAAMC,SAAS,GAAG,MAAOC,MAAM,IAAK;EAC1C,MAAMC,IAAI,GAAG,MAAML,OAAO,CAACI,MAAM,CAAC;EAElC,MAAME,QAAQ,GAAG,MAAML,WAAW,CAACG,MAAM,CAAC;EAE1C,MAAMG,KAAK,GAAG,MAAML,QAAQ,CAAC,CAAC;EAE9B,MAAMM,kBAAkB,GAAGF,QAAQ,CAACG,GAAG,CAAEC,OAAO,IAAK;IACpD,MAAMC,IAAI,GAAGJ,KAAK,CAACK,IAAI,CAAC,CAAC;MAAEC;IAAG,CAAC,KAAKA,EAAE,KAAKP,QAAQ,CAACQ,QAAQ,CAAC;IAC7D,OAAO;MACN,GAAGJ,OAAO;MACVK,MAAM,EAAEJ;IACT,CAAC;EACF,CAAC,CAAC;EAEF,OAAO;IACNK,KAAK,EAAE,IAAI;IACXC,GAAG,EAAE;MAAE,GAAGZ,IAAI;MAAEC;IAAS;EAC1B,CAAC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}