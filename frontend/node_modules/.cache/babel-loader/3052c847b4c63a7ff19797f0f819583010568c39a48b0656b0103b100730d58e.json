{"ast":null,"code":"import { getComments, getPosts } from '../api';\nimport { getCommentsCount } from '../utils';\nexport const fetchPosts = async (page, limit) => {\n  const [posts, comments] = await Promise.all([getPosts(page, limit), getComments()]).then(console.log(posts, 'postsposts'));\n  return {\n    error: null,\n    res: posts.map(post => ({\n      ...post,\n      commentsCount: getCommentsCount(comments, post.id)\n    }))\n  };\n};","map":{"version":3,"names":["getComments","getPosts","getCommentsCount","fetchPosts","page","limit","posts","comments","Promise","all","then","console","log","error","res","map","post","commentsCount","id"],"sources":["/Users/evgeniapodoprigora/Desktop/practice/src/bff/operations/fetch-posts.js"],"sourcesContent":["import { getComments, getPosts } from '../api';\nimport { getCommentsCount } from '../utils';\n\nexport const fetchPosts = async (page, limit) => {\n\tconst [posts, comments] = await Promise.all([\n\t\tgetPosts(page, limit),\n\t\tgetComments(),\n\t]).then(console.log(posts, 'postsposts'));\n\n\treturn {\n\t\terror: null,\n\t\tres: posts.map((post) => ({\n\t\t\t...post,\n\t\t\tcommentsCount: getCommentsCount(comments, post.id),\n\t\t})),\n\t};\n};\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,QAAQ;AAC9C,SAASC,gBAAgB,QAAQ,UAAU;AAE3C,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAOC,IAAI,EAAEC,KAAK,KAAK;EAChD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAC3CR,QAAQ,CAACG,IAAI,EAAEC,KAAK,CAAC,EACrBL,WAAW,CAAC,CAAC,CACb,CAAC,CAACU,IAAI,CAACC,OAAO,CAACC,GAAG,CAACN,KAAK,EAAE,YAAY,CAAC,CAAC;EAEzC,OAAO;IACNO,KAAK,EAAE,IAAI;IACXC,GAAG,EAAER,KAAK,CAACS,GAAG,CAAEC,IAAI,KAAM;MACzB,GAAGA,IAAI;MACPC,aAAa,EAAEf,gBAAgB,CAACK,QAAQ,EAAES,IAAI,CAACE,EAAE;IAClD,CAAC,CAAC;EACH,CAAC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}