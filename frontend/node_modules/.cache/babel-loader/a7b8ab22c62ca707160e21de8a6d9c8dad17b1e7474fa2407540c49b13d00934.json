{"ast":null,"code":"import { sessions } from '../sessions';\nimport { getUser, addUser } from '../api';\nexport const register = async (regLogin, regPassword) => {\n  const existedUser = await getUser(regLogin);\n  if (existedUser) {\n    return {\n      error: 'Такой логин уже занят',\n      res: null\n    };\n  }\n  const user = await addUser(regLogin, regPassword);\n  return {\n    error: null,\n    res: {\n      id: user.id,\n      login: user.login,\n      roleId: user.role_id,\n      session: sessions.create(user)\n    }\n  };\n};","map":{"version":3,"names":["sessions","getUser","addUser","register","regLogin","regPassword","existedUser","error","res","user","id","login","roleId","role_id","session","create"],"sources":["/Users/evgeniapodoprigora/Desktop/practice/frontend/src/bff/operations/register.js"],"sourcesContent":["import { sessions } from '../sessions';\nimport { getUser, addUser } from '../api';\n\nexport const register = async (regLogin, regPassword) => {\n\tconst existedUser = await getUser(regLogin);\n\n\tif (existedUser) {\n\t\treturn {\n\t\t\terror: 'Такой логин уже занят',\n\t\t\tres: null,\n\t\t};\n\t}\n\n\tconst user = await addUser(regLogin, regPassword);\n\n\treturn {\n\t\terror: null,\n\t\tres: {\n\t\t\tid: user.id,\n\t\t\tlogin: user.login,\n\t\t\troleId: user.role_id,\n\t\t\tsession: sessions.create(user),\n\t\t},\n\t};\n};\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,aAAa;AACtC,SAASC,OAAO,EAAEC,OAAO,QAAQ,QAAQ;AAEzC,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,WAAW,KAAK;EACxD,MAAMC,WAAW,GAAG,MAAML,OAAO,CAACG,QAAQ,CAAC;EAE3C,IAAIE,WAAW,EAAE;IAChB,OAAO;MACNC,KAAK,EAAE,uBAAuB;MAC9BC,GAAG,EAAE;IACN,CAAC;EACF;EAEA,MAAMC,IAAI,GAAG,MAAMP,OAAO,CAACE,QAAQ,EAAEC,WAAW,CAAC;EAEjD,OAAO;IACNE,KAAK,EAAE,IAAI;IACXC,GAAG,EAAE;MACJE,EAAE,EAAED,IAAI,CAACC,EAAE;MACXC,KAAK,EAAEF,IAAI,CAACE,KAAK;MACjBC,MAAM,EAAEH,IAAI,CAACI,OAAO;MACpBC,OAAO,EAAEd,QAAQ,CAACe,MAAM,CAACN,IAAI;IAC9B;EACD,CAAC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}