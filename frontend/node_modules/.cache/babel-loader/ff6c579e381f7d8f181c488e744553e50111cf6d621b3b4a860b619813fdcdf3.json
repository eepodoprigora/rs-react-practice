{"ast":null,"code":"import{transformPost}from'../transformers';export const getPosts=async(searchPhrase,page,limit)=>{const searchQueryMain='http://localhost:3005/posts';try{return fetch(searchQueryMain).then(response=>response.json()).then(loadedPosts=>{// Фильтруем статьи по заголовку\nconst filteredPosts=loadedPosts.filter(post=>post.title.toLowerCase().includes(searchPhrase.toLowerCase())||[]);// Пагинация: выбираем нужные статьи на основе текущей страницы и лимита\nconst startIndex=(page-1)*limit;const paginatedPosts=filteredPosts.slice(startIndex,startIndex+limit);return{posts:paginatedPosts.map(transformPost),lastPage:Math.ceil(filteredPosts.length/limit)};}).catch(error=>{console.error('Error fetching posts:',error);return{posts:[],// Возвращаем пустой массив при ошибке\nlastPage:1// Устанавливаем минимальное значение страницы\n};});}catch(e){console.log(e);return{posts:[],// Возвращаем пустой массив в случае исключения\nlastPage:1// Устанавливаем минимальное значение страницы\n};}};","map":{"version":3,"names":["transformPost","getPosts","searchPhrase","page","limit","searchQueryMain","fetch","then","response","json","loadedPosts","filteredPosts","filter","post","title","toLowerCase","includes","startIndex","paginatedPosts","slice","posts","map","lastPage","Math","ceil","length","catch","error","console","e","log"],"sources":["/Users/evgeniapodoprigora/Desktop/practice/frontend/src/bff/api/get-posts.js"],"sourcesContent":["import { transformPost } from '../transformers';\n\nexport const getPosts = async (searchPhrase, page, limit) => {\n\tconst searchQueryMain = 'http://localhost:3005/posts';\n\ttry {\n\t\treturn fetch(searchQueryMain)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((loadedPosts) => {\n\t\t\t\t// Фильтруем статьи по заголовку\n\t\t\t\tconst filteredPosts = loadedPosts.filter(\n\t\t\t\t\t(post) =>\n\t\t\t\t\t\tpost.title.toLowerCase().includes(searchPhrase.toLowerCase()) ||\n\t\t\t\t\t\t[],\n\t\t\t\t);\n\n\t\t\t\t// Пагинация: выбираем нужные статьи на основе текущей страницы и лимита\n\t\t\t\tconst startIndex = (page - 1) * limit;\n\t\t\t\tconst paginatedPosts = filteredPosts.slice(\n\t\t\t\t\tstartIndex,\n\t\t\t\t\tstartIndex + limit,\n\t\t\t\t);\n\n\t\t\t\treturn {\n\t\t\t\t\tposts: paginatedPosts.map(transformPost),\n\t\t\t\t\tlastPage: Math.ceil(filteredPosts.length / limit),\n\t\t\t\t};\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error('Error fetching posts:', error);\n\t\t\t\treturn {\n\t\t\t\t\tposts: [], // Возвращаем пустой массив при ошибке\n\t\t\t\t\tlastPage: 1, // Устанавливаем минимальное значение страницы\n\t\t\t\t};\n\t\t\t});\n\t} catch (e) {\n\t\tconsole.log(e);\n\t\treturn {\n\t\t\tposts: [], // Возвращаем пустой массив в случае исключения\n\t\t\tlastPage: 1, // Устанавливаем минимальное значение страницы\n\t\t};\n\t}\n};\n"],"mappings":"AAAA,OAASA,aAAa,KAAQ,iBAAiB,CAE/C,MAAO,MAAM,CAAAC,QAAQ,CAAG,KAAAA,CAAOC,YAAY,CAAEC,IAAI,CAAEC,KAAK,GAAK,CAC5D,KAAM,CAAAC,eAAe,CAAG,6BAA6B,CACrD,GAAI,CACH,MAAO,CAAAC,KAAK,CAACD,eAAe,CAAC,CAC3BE,IAAI,CAAEC,QAAQ,EAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,WAAW,EAAK,CACtB;AACA,KAAM,CAAAC,aAAa,CAAGD,WAAW,CAACE,MAAM,CACtCC,IAAI,EACJA,IAAI,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACd,YAAY,CAACa,WAAW,CAAC,CAAC,CAAC,EAC7D,EACF,CAAC,CAED;AACA,KAAM,CAAAE,UAAU,CAAG,CAACd,IAAI,CAAG,CAAC,EAAIC,KAAK,CACrC,KAAM,CAAAc,cAAc,CAAGP,aAAa,CAACQ,KAAK,CACzCF,UAAU,CACVA,UAAU,CAAGb,KACd,CAAC,CAED,MAAO,CACNgB,KAAK,CAAEF,cAAc,CAACG,GAAG,CAACrB,aAAa,CAAC,CACxCsB,QAAQ,CAAEC,IAAI,CAACC,IAAI,CAACb,aAAa,CAACc,MAAM,CAAGrB,KAAK,CACjD,CAAC,CACF,CAAC,CAAC,CACDsB,KAAK,CAAEC,KAAK,EAAK,CACjBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC7C,MAAO,CACNP,KAAK,CAAE,EAAE,CAAE;AACXE,QAAQ,CAAE,CAAG;AACd,CAAC,CACF,CAAC,CAAC,CACJ,CAAE,MAAOO,CAAC,CAAE,CACXD,OAAO,CAACE,GAAG,CAACD,CAAC,CAAC,CACd,MAAO,CACNT,KAAK,CAAE,EAAE,CAAE;AACXE,QAAQ,CAAE,CAAG;AACd,CAAC,CACF,CACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}