{"ast":null,"code":"import { transformPost } from '../transformers';\n\n// export const getPosts = async (searchPhrase, page, limit) => {\n// \treturn fetch(\n// \t\t`http://localhost:3005/posts?title_like=${searchPhrase}&_page=${page}&_per_page=${limit}`,\n// \t)\n// \t\t.then((loadedPosts) => loadedPosts.json())\n// \t\t.then((loadedPosts) => {\n// \t\t\treturn {\n// \t\t\t\tposts: loadedPosts.data && loadedPosts.data.map(transformPost),\n// \t\t\t\tlastPage: loadedPosts.last,\n// \t\t\t};\n// \t\t});\n// };\n\nexport const getPosts = async (searchPhrase, page, limit) => {\n  return fetch(`http://localhost:3005/posts?_page=${page}&_per_page=${limit}`).then(response => response.json()).then(loadedPosts => {\n    const filteredPosts = loadedPosts.data.filter(post => post.title.toLowerCase().includes(searchPhrase.toLowerCase()));\n    return {\n      posts: filteredPosts.data.map(transformPost),\n      lastPage: loadedPosts.last\n    };\n  });\n};","map":{"version":3,"names":["transformPost","getPosts","searchPhrase","page","limit","fetch","then","response","json","loadedPosts","filteredPosts","data","filter","post","title","toLowerCase","includes","posts","map","lastPage","last"],"sources":["/Users/evgeniapodoprigora/Desktop/practice/src/bff/api/get-posts.js"],"sourcesContent":["import { transformPost } from '../transformers';\n\n// export const getPosts = async (searchPhrase, page, limit) => {\n// \treturn fetch(\n// \t\t`http://localhost:3005/posts?title_like=${searchPhrase}&_page=${page}&_per_page=${limit}`,\n// \t)\n// \t\t.then((loadedPosts) => loadedPosts.json())\n// \t\t.then((loadedPosts) => {\n// \t\t\treturn {\n// \t\t\t\tposts: loadedPosts.data && loadedPosts.data.map(transformPost),\n// \t\t\t\tlastPage: loadedPosts.last,\n// \t\t\t};\n// \t\t});\n// };\n\nexport const getPosts = async (searchPhrase, page, limit) => {\n\treturn fetch(`http://localhost:3005/posts?_page=${page}&_per_page=${limit}`)\n\t\t.then((response) => response.json())\n\t\t.then((loadedPosts) => {\n\t\t\tconst filteredPosts = loadedPosts.data.filter((post) =>\n\t\t\t\tpost.title.toLowerCase().includes(searchPhrase.toLowerCase()),\n\t\t\t);\n\t\t\treturn {\n\t\t\t\tposts: filteredPosts.data.map(transformPost),\n\t\t\t\tlastPage: loadedPosts.last,\n\t\t\t};\n\t\t});\n};\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,iBAAiB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAOC,YAAY,EAAEC,IAAI,EAAEC,KAAK,KAAK;EAC5D,OAAOC,KAAK,CAAC,qCAAqCF,IAAI,cAAcC,KAAK,EAAE,CAAC,CAC1EE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,WAAW,IAAK;IACtB,MAAMC,aAAa,GAAGD,WAAW,CAACE,IAAI,CAACC,MAAM,CAAEC,IAAI,IAClDA,IAAI,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACd,YAAY,CAACa,WAAW,CAAC,CAAC,CAC7D,CAAC;IACD,OAAO;MACNE,KAAK,EAAEP,aAAa,CAACC,IAAI,CAACO,GAAG,CAAClB,aAAa,CAAC;MAC5CmB,QAAQ,EAAEV,WAAW,CAACW;IACvB,CAAC;EACF,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}