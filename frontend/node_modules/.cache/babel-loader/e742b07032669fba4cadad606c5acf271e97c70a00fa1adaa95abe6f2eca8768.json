{"ast":null,"code":"import{useEffect}from'react';import{useStore}from'react-redux';export const useResetForm=reset=>{const store=useStore();useEffect(()=>{let currentWasLogout=store.getState().app.wasLogout;return store.subscribe(()=>{let prevWasLogout=currentWasLogout;currentWasLogout=store.getState().app.wasLogout;if(currentWasLogout!==prevWasLogout){reset();}});},[reset,store]);};","map":{"version":3,"names":["useEffect","useStore","useResetForm","reset","store","currentWasLogout","getState","app","wasLogout","subscribe","prevWasLogout"],"sources":["/Users/evgeniapodoprigora/Desktop/practice/frontend/src/hooks/use-reset-form.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useStore } from 'react-redux';\n\nexport const useResetForm = (reset) => {\n\tconst store = useStore();\n\tuseEffect(() => {\n\t\tlet currentWasLogout = store.getState().app.wasLogout;\n\t\treturn store.subscribe(() => {\n\t\t\tlet prevWasLogout = currentWasLogout;\n\t\t\tcurrentWasLogout = store.getState().app.wasLogout;\n\n\t\t\tif (currentWasLogout !== prevWasLogout) {\n\t\t\t\treset();\n\t\t\t}\n\t\t});\n\t}, [reset, store]);\n};\n"],"mappings":"AAAA,OAASA,SAAS,KAAQ,OAAO,CACjC,OAASC,QAAQ,KAAQ,aAAa,CAEtC,MAAO,MAAM,CAAAC,YAAY,CAAIC,KAAK,EAAK,CACtC,KAAM,CAAAC,KAAK,CAAGH,QAAQ,CAAC,CAAC,CACxBD,SAAS,CAAC,IAAM,CACf,GAAI,CAAAK,gBAAgB,CAAGD,KAAK,CAACE,QAAQ,CAAC,CAAC,CAACC,GAAG,CAACC,SAAS,CACrD,MAAO,CAAAJ,KAAK,CAACK,SAAS,CAAC,IAAM,CAC5B,GAAI,CAAAC,aAAa,CAAGL,gBAAgB,CACpCA,gBAAgB,CAAGD,KAAK,CAACE,QAAQ,CAAC,CAAC,CAACC,GAAG,CAACC,SAAS,CAEjD,GAAIH,gBAAgB,GAAKK,aAAa,CAAE,CACvCP,KAAK,CAAC,CAAC,CACR,CACD,CAAC,CAAC,CACH,CAAC,CAAE,CAACA,KAAK,CAAEC,KAAK,CAAC,CAAC,CACnB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}